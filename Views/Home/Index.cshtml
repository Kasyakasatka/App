@model UserManagementApp.DTOs.UserManagementDto
@{
    ViewData["Title"] = "User Management";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" xintegrity="sha512-iecdLmaskl7CVs6z/s7i4J0z6T3x/t1v6v4XgJ7Lp8z9gE3W75A3e7c8gHjG+FkG+c+d5z+s5z/t5z+q8x02A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<style>
    .btn-icon {
        display: inline-flex;
        align-items: center;
    }

        .btn-icon .bi {
            margin-right: 8px;
        }
</style>

<div class="container-fluid py-4">
    @if (TempData["StatusMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["StatusMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form id="userForm" asp-controller="Admin" method="post">
        <div class="d-flex justify-content-between mb-3">
            <div>
                <button type="button" class="btn btn-primary btn-icon" disabled id="blockBtn" data-action="Block" data-bs-toggle="modal" data-bs-target="#confirmationModal">
                    <i class="fa-solid fa-lock"></i> Block
                </button>
                <button type="button" class="btn btn-outline-primary btn-icon" disabled id="unblockBtn" data-action="Unblock" data-bs-toggle="modal" data-bs-target="#confirmationModal">
                    <i class="fa-solid fa-unlock"></i> Unblock
                </button>
                <button type="button" class="btn btn-outline-danger btn-icon" disabled id="deleteBtn" data-action="Delete" data-bs-toggle="modal" data-bs-target="#confirmationModal">
                    <i class="fa-solid fa-trash-can"></i> Delete
                </button>
                <input type="hidden" name="selectedUsers" id="selectedUsersInput" />
            </div>
            <div class="input-group" style="width: 250px;">
                <input type="text" class="form-control" placeholder="Filter" aria-label="Filter" id="filterInput">
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover table-striped" id="userTable">
                <thead>
                    <tr>
                        <th style="width: 50px;">
                            <input type="checkbox" id="selectAllCheckbox">
                        </th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Last Seen</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Users)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" name="selectedUsers" value="@user.Id" class="user-checkbox">
                            </td>
                            <td>
                                <div>@user.Name</div>
                                <small class="text-muted">N/A</small>
                            </td>
                            <td>@user.Email</td>
                            <td>
                                <div>@((DateTime.UtcNow - user.LastLoginTime).TotalMinutes < 60 ? "Less than an hour ago" : user.LastLoginTime.ToString("yyyy-MM-dd HH:mm"))</div>
                            </td>
                            <td>
                                @if (user.IsBlocked)
                                {
                                    <span class="badge bg-danger">Blocked</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>
</div>

<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirm Action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to proceed with this action?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmActionBtn">Confirm</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            const selectAllCheckbox = $('#selectAllCheckbox');
            const userCheckboxes = $('.user-checkbox');
            const actionButtons = $('#blockBtn, #unblockBtn, #deleteBtn');
            const confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
            let pendingAction = null;

            function toggleButtons() {
                const anyChecked = userCheckboxes.is(':checked');
                actionButtons.prop('disabled', !anyChecked);
            }

            selectAllCheckbox.on('change', function () {
                userCheckboxes.prop('checked', this.checked);
                toggleButtons();
            });

            userCheckboxes.on('change', function () {
                if (!this.checked) {
                    selectAllCheckbox.prop('checked', false);
                } else if (userCheckboxes.length === userCheckboxes.filter(':checked').length) {
                    selectAllCheckbox.prop('checked', true);
                }
                toggleButtons();
            });

            actionButtons.on('click', function(e) {
                e.preventDefault();
                pendingAction = $(this).data('action');
                let message = 'Are you sure you want to ' + pendingAction.toLowerCase() + ' selected users?';
                if (pendingAction === 'Delete') {
                    message += ' This action is irreversible.';
                }
                $('#confirmationModal .modal-body').text(message);
                confirmationModal.show();
            });

            $('#confirmActionBtn').on('click', function() {
                if (pendingAction) {
                    const form = $('#userForm');
                    form.attr('action', `@Url.Action("${pendingAction}", "Admin")`);
                    form.submit();
                }
            });

            toggleButtons();

            $('#filterInput').on('keyup', function() {
                const value = $(this).val().toLowerCase();
                $("#userTable tbody tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}
